{"version":3,"file":"stories-Button-stories-tsx.c4023a52d2e071c6ed32.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAeA;AAaA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA","sources":["webpack://my-ui-library/./src/components/Button/Button.tsx"],"sourcesContent":["import clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport \"../../styles/tailwind.css\";\r\n\r\nexport interface ButtonProps {\r\n  backgroundColor?: string;\r\n  width?: number | string;\r\n  height?: number | string;\r\n  label: string;\r\n  onClick?: () => void;\r\n  rounded?: boolean;\r\n  className?: string;\r\n  color?: string;\r\n  hoverColor?: string;\r\n  type: \"fullcolor\" | \"text\" | \"outline\";\r\n}\r\n\r\n/** Primary UI component for user interaction */\r\nexport const Button = ({\r\n  width,\r\n  height,\r\n  backgroundColor,\r\n  label,\r\n  rounded,\r\n  className,\r\n  color,\r\n  hoverColor,\r\n  type,\r\n  ...props\r\n}: ButtonProps) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  return (\r\n    <button\r\n      onMouseOver={() => setHover(true)}\r\n      onMouseLeave={() => setHover(false)}\r\n      type=\"button\"\r\n      className={clsx(\r\n        \"flex items-center justify-center border-2 px-3 py-1 font-bold\",\r\n        {\r\n          \"rounded-full\": rounded, // 기본 rounded 설정\r\n          \"text-white bg-main-color border-main-color\": type === \"fullcolor\", // 기본 fullcolor 스타일\r\n          \"text-main-color border-main-color bg-transparent\":\r\n            type === \"outline\", // 기본 outline 스타일\r\n          \"text-main-color bg-transparent border-none\": type === \"text\", // 기본 text 스타일\r\n        },\r\n        className\r\n      )}\r\n      style={{\r\n        width: width,\r\n        height: height,\r\n        backgroundColor:\r\n          type === \"fullcolor\" && !hover\r\n            ? backgroundColor\r\n            : type === \"fullcolor\" && hover\r\n            ? hoverColor\r\n            : undefined,\r\n        borderColor: type !== \"text\" && hover ? hoverColor : undefined,\r\n        WebkitUserSelect: \"none\",\r\n        MozUserSelect: \"none\",\r\n        msUserSelect: \"none\",\r\n        userSelect: \"none\",\r\n      }}\r\n      {...props}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n"],"names":[],"sourceRoot":""}