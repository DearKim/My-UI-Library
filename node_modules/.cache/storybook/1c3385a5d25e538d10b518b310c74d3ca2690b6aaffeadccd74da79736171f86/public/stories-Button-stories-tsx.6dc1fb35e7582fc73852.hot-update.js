"use strict";
self["webpackHotUpdatemy_ui_library"]("stories-Button-stories-tsx",{

/***/ "./src/components/Button/Button.tsx":
/*!******************************************!*\
  !*** ./src/components/Button/Button.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Button: () => (/* binding */ Button)
/* harmony export */ });
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ "./node_modules/clsx/dist/clsx.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _styles_tailwind_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../styles/tailwind.css */ "./src/styles/tailwind.css");



/** Primary UI component for user interaction */ const Button = ({ fullColor, width, height, backgroundColor, label, rounded, className, color, ...props })=>{
    const [hover, setHover] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
        onMouseOver: ()=>{
            setHover(true);
        },
        onMouseLeave: ()=>{
            setHover(false);
        },
        type: "button",
        className: `${className} flex items-center justify-center border-solid rounded-lg border-2 px-3 py-1 border-main-color text-main-color ${(0,clsx__WEBPACK_IMPORTED_MODULE_2__["default"])({
            [`text-white bg-main-color`]: !color && hover || fullColor,
            [`bg-base-color border-base-color`]: !color && hover && fullColor,
            [`text-white bg-[${color}]`]: color && hover,
            [`text-[${color}]`]: color,
            ["!rounded-3xl"]: rounded
        })}`,
        style: {
            backgroundColor,
            width: width,
            height: height
        },
        ...props
    }, label);
};
Button.__docgenInfo = {
    "description": "Primary UI component for user interaction",
    "methods": [],
    "displayName": "Button",
    "props": {
        "fullColor": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": "Is this the principal call to action on the page?"
        },
        "backgroundColor": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": "What background color to use"
        },
        "width": {
            "required": false,
            "tsType": {
                "name": "union",
                "raw": "number | string",
                "elements": [
                    {
                        "name": "number"
                    },
                    {
                        "name": "string"
                    }
                ]
            },
            "description": "How large should the button be?"
        },
        "height": {
            "required": false,
            "tsType": {
                "name": "union",
                "raw": "number | string",
                "elements": [
                    {
                        "name": "number"
                    },
                    {
                        "name": "string"
                    }
                ]
            },
            "description": ""
        },
        "label": {
            "required": true,
            "tsType": {
                "name": "string"
            },
            "description": "Button contents"
        },
        "onClick": {
            "required": false,
            "tsType": {
                "name": "signature",
                "type": "function",
                "raw": "() => void",
                "signature": {
                    "arguments": [],
                    "return": {
                        "name": "void"
                    }
                }
            },
            "description": "Optional click handler"
        },
        "rounded": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": ""
        },
        "className": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": ""
        },
        "color": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": ""
        }
    }
};


/***/ })

});
//# sourceMappingURL=stories-Button-stories-tsx.6dc1fb35e7582fc73852.hot-update.js.map