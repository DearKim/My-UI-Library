{"version":3,"file":"stories-Button-stories-tsx.fed57789b61741c04496.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAqBA;AAcA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA","sources":["webpack://my-ui-library/./src/components/Button/Button.tsx"],"sourcesContent":["import clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport \"../../styles/tailwind.css\";\r\n\r\nexport interface ButtonProps {\r\n  /** Is this the principal call to action on the page? */\r\n  fullColor?: boolean;\r\n  /** What background color to use */\r\n  backgroundColor?: string;\r\n  /** How large should the button be? */\r\n  width?: number | string;\r\n  height?: number | string;\r\n  /** Button contents */\r\n  label: string;\r\n  /** Optional click handler */\r\n  onClick?: () => void;\r\n  rounded?: boolean;\r\n  className?: string;\r\n  color?: string;\r\n  hoverColor?: string;\r\n  type?: \"normal\" | \"text\" | \"outline\";\r\n}\r\n\r\n/** Primary UI component for user interaction */\r\nexport const Button = ({\r\n  fullColor,\r\n  width,\r\n  height,\r\n  backgroundColor,\r\n  label,\r\n  rounded,\r\n  className,\r\n  color,\r\n  hoverColor,\r\n  type,\r\n  ...props\r\n}: ButtonProps) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  return (\r\n    <button\r\n      onMouseOver={() => {\r\n        setHover(true);\r\n      }}\r\n      onMouseLeave={() => {\r\n        setHover(false);\r\n      }}\r\n      type=\"button\"\r\n      className={`${className} flex items-center justify-center border-solid rounded-lg border-2 px-3 py-1 border-main-color text-main-color ${clsx(\r\n        {\r\n          // fullColor === true\r\n          [`text-white bg-main-color`]: (!color && hover) || fullColor,\r\n          [`bg-base-color border-base-color`]: !color && hover && fullColor,\r\n          // color === true\r\n          [`text-white bg-[${color}]`]: !fullColor && color && hover,\r\n          [`text-[${color}]`]: color,\r\n          [`text-white bg-${color}`]: color && fullColor,\r\n          [`border-${color} border-[${color}]`]: color && fullColor && hover,\r\n          // hoverColor === true\r\n          [`bg-[${hoverColor}]`]: hoverColor,\r\n          // rounded === true\r\n          [\"!rounded-3xl\"]: rounded,\r\n        }\r\n      )}`}\r\n      style={{\r\n        backgroundColor,\r\n        width: width,\r\n        height: height,\r\n        WebkitUserSelect: \"none\",\r\n        MozUserSelect: \"none\",\r\n        msUserSelect: \"none\",\r\n        userSelect: \"none\",\r\n      }}\r\n      {...props}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n"],"names":[],"sourceRoot":""}